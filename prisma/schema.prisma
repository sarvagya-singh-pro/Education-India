generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                String              @id @default(cuid())
  email             String              @unique
  name              String?
  password          String?
  profileCompleted  Boolean             @default(false)
  phoneNumber       String?
  emailVerified     Boolean @default(false)
  image             String?
  accounts          Account[]
  sessions          Session[]
  aadharNo              String?    @unique
  address               String?
  bloodGroup            String?
  
  category              String?
  course                String?
  dob                   DateTime?
  fatherName            String?
  motherName            String?
   maritalStatus         String?
  idMark                String?
  VerificationToken VerificationToken[]
   session               String?
  university            String?
  documents             Documents? @relation(fields: [documentsId], references: [id])
  documentsId           String?    @unique

  createdAt             DateTime?   @default(now())
  updatedAt             DateTime ?  @updatedAt
}

model Account {
  id                String @id @default(cuid())
  userId            String
  provider          String
  providerAccountId String
  type              String
  user              User   @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime @db.Timestamp(0)
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  id        String    @default(cuid())
  token     String @unique
  user      User   @relation(fields: [id], references: [id])
  expires   DateTime
}

model Documents {
  id                     String    @id @default(uuid())
  tenthMarksheet         String?
  twelfthMarksheet       String?
  graduationMarksheet    String?
  lastDegreeCertificate  String?
  technicalQualifications String?
  
  student               User?

  createdAt             DateTime   @default(now())
  updatedAt             DateTime   @updatedAt

  @@map("documents")
}